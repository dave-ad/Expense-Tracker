@model IEnumerable<Expense_Tracker.Models.Transaction>

@{
    ViewData["PageTitle"] = "Transactions";
    ViewData["PageActionText"] = "+ New Transaction";
    ViewData["PageActionUrl"] = "/Transaction/AddOrEdit";
}

<div class="row">
    <div class="col-md-7">
        <ejs-grid id="transactions" dataSource="@Model" gridLines="None" allowSorting="true" allowPaging="true">
            <e-grid-pagesettings pageSize="10"></e-grid-pagesettings>
            <e-grid-columns>
                <e-grid-column headerText="Category" field="CategoryTitleWithIcon"></e-grid-column>
                <e-grid-column headerText="Date" field="Date" type="date" format="MMM-dd-yy" width="110px" textAlign="Left"></e-grid-column>
                <e-grid-column headerText="Amount" field="FormattedAmount" width="110px" textAlign=Right></e-grid-column>
                <e-grid-column headerText="Actions" template="#actionColumnTemplate" width="100px"></e-grid-column>
            </e-grid-columns>
        </ejs-grid>
    </div>
    <div class="col-md-5">
        <div class="widget h-100 d-flex justify-content-center align-items-center">
            <i class="fa-solid fa-shapes fa-2xl"></i>
        </div>
    </div>
</div>

@* Validate Syncfusion ASP.NET Core UI Controls *@
<script id="actionColumnTemplate" type="text/x-template">
    <div class="d-flex flex-row justify-content-start">
        <a class="btn btn-sm no-a-decoration" href="/Transaction/AddOrEdit/${TransactionId}">
            <i class="fa-solid fa-pen fa-lg"></i>
        </a>
        <form action="/Transaction/Delete/${TransactionId}" method="post">
    @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-sm btn-link no-a-decoration" onclick="return confirm(&quot;Are you sure you want to delete the record?&quot;)">
                <i class="fa-solid fa-trash-can fa-lg text-danger"></i>
            </button>
        </form>
    </div>
</script>

<script>
    // Sets required property in the FormValidator rules collection
    var options = {
        rules: {
            'Title': { required: true },
            'Icon': { required: true },
        },
    };

    // Defines FormValidator to validate the TextBox
    var formObject = new ej.inputs.FormValidator('#form-element', options);

    // Places error label outside the TextBox using the customPlacement event of FormValidator
    formObject.customPlacement = function (element, errorElement) {
        element.parentElement.parentElement.appendChild(errorElement);
    };
    // Form validates the input values using validate method of FormValidator
    document.getElementById("submit").addEventListener('click', function () {
        formObject.validate();
    });
</script>